name: "Godot 4.3 CI/CD"

env:
  GODOT_VERSION: 4.2.1

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # get commit summary
      - name: Get commit summary
        uses: kristiyan-petrov/commit-summary@v3
        id: get_commit_summary
        with:
          ref: ${{ github.ref }}

      # create release
      - name: Create Release
        id: create_release
        uses: kristiyan-petrov/commit-summary@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gitversion.outputs.PreReleaseTag }}
          release_name: Prerelease ${{ github.ref }}
          body: |
            ### Changelog
            ${{ steps.get_commit_summary.outputs.summary }}
            ### Additional info:
            Thanks for playing!
            I love you guys <3
          draft: false
          prerelease: true
  web:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Create staging directory
        run: mkdir -v -p build/web

      - name: Build for Web
        run: godot -v --export-release --headless "Web"

      - name: Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
          sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "UPDATE GITHUB PAGES"

      - name: Zip Web artifacts
        run: zip -r game_web.zip build/web

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_web
          path: game_web.zip

  linux:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Create staging directory
        run: mkdir -v -p build/linux

      - name: Build for Linux
        run: godot -v --export-release --headless "Linux/X11" --path . --output "build/linux/Throwdwarf"

      - name: Zip Linux artifacts
        run: cd build/linux && zip -r ../../game_linux.zip * 

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_linux
          path: game_linux.zip

  windows:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Create staging directory
        run: mkdir -v -p build/windows

      - name: Build for Windows
        run: godot -v --export-release --headless "Windows Desktop" --path . --output "build/windows/Throwdwarf.exe"

      - name: Zip Windows artifacts
        run: cd build/windows && zip -r ../../game_windows.zip *

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_windows
          path: game_windows.zip

  release-upload:
    needs: [web, linux, windows, release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Web artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_web

      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_windows

      - name: Upload Web Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_web.zip
          asset_name: Throwdwarf_Web.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_linux.zip
          asset_name: Throwdwarf_Linux.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_windows.zip
          asset_name: Throwdwarf_Windows.zip
          asset_content_type: application/zip
