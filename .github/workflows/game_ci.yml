name: "godot-ci export"

on: push

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@latest-version
        with:
          versionSpec: '5.x'


      - name: Determine version
        id: gitversion
        run: echo "GODOT_VERSION=$(gitversion | jq -r .MajorMinorPatch)" >> $GITHUB_ENV

      - name: Set environment variables
        run: |
          echo "EXPORT_NAME=test-project" >> $GITHUB_ENV
          echo "PROJECT_PATH=test-project" >> $GITHUB_ENV

  export-windows:
    name: Windows Export
    needs: setup
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    needs: setup
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    needs: setup
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "HTML5" ../build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages
          folder: build/web

  export-mac:
    name: Mac Export
    needs: setup
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Mac OSX" ../build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac

  create-release:
    name: Create GitHub Release
    needs: [export-windows, export-linux, export-web, export-mac]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Get the latest release tag
        id: get_latest_release
        run: |
          latest_release=$(git describe --tags --abbrev=0)
          echo "latest_release=$latest_release" >> $GITHUB_ENV

      - name: Get commits since the latest release
        id: get_commits
        run: |
          commits=$(git log "${{ env.latest_release }}..HEAD" --oneline)
          echo "commits=$commits" >> $GITHUB_ENV

      - name: Create a new release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.GODOT_VERSION }}
          release_name: Release ${{ env.GODOT_VERSION }}
          body: |
            ## Commits since last release
            ${{ env.commits }}
            ## Aditional info <3
            As always, thanks for playing!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
